[{"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/index.js":"1","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/reportWebVitals.js":"2","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/App.js":"3","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/contexts/AuthContext.js":"4","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/services/TaskbleService.js":"5","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/auth/Login.js":"6","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/auth/AuthenticatedRoute.js":"7","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/Home.js":"8","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/helpers/authHelper.js":"9","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/UpdatePassword.js":"10","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/UI/LogoSprite.js":"11","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/UI/Input.js":"12","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/hooks/useInput.js":"13","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/SignUp.js":"14","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/Validation.js":"15","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/tasks/CreateTask.js":"16","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/auth/NotAuthenticatedRoute.js":"17"},{"size":745,"mtime":1614885442703,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1612216164924,"results":"20","hashOfConfig":"19"},{"size":1115,"mtime":1615490589423,"results":"21","hashOfConfig":"19"},{"size":936,"mtime":1614377157363,"results":"22","hashOfConfig":"19"},{"size":1348,"mtime":1615326899128,"results":"23","hashOfConfig":"19"},{"size":1664,"mtime":1615155952556,"results":"24","hashOfConfig":"19"},{"size":373,"mtime":1614446965409,"results":"25","hashOfConfig":"19"},{"size":851,"mtime":1615243682664,"results":"26","hashOfConfig":"19"},{"size":787,"mtime":1614461402846,"results":"27","hashOfConfig":"19"},{"size":3518,"mtime":1615328491186,"results":"28","hashOfConfig":"19"},{"size":1471,"mtime":1614885192289,"results":"29","hashOfConfig":"19"},{"size":356,"mtime":1615153875543,"results":"30","hashOfConfig":"19"},{"size":942,"mtime":1615232569873,"results":"31","hashOfConfig":"19"},{"size":3618,"mtime":1615490096274,"results":"32","hashOfConfig":"19"},{"size":315,"mtime":1615326590877,"results":"33","hashOfConfig":"19"},{"size":3714,"mtime":1615331050475,"results":"34","hashOfConfig":"19"},{"size":373,"mtime":1615490505884,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"4pqsgk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/index.js",[],["72","73"],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/reportWebVitals.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/App.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/contexts/AuthContext.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/services/TaskbleService.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/auth/Login.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/auth/AuthenticatedRoute.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/Home.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/helpers/authHelper.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/UpdatePassword.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/UI/LogoSprite.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/UI/Input.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/hooks/useInput.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/SignUp.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/users/Validation.js",[],"/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/tasks/CreateTask.js",["74"],"import React, { useContext } from 'react'\n\nimport AuthContext from '../../contexts/AuthContext'\nimport TaskbleService from '../../services/TaskbleService'\n\nimport useInput from '../../hooks/useInput'\n\nimport Input from '../UI/Input'\n\nconst validators = {\n  keyword: val => val.length <= 10,\n  title: val => val,\n  userPriority: val => val,\n  toDoDate: val => val,\n  limitDate: val => val\n}\n\nconst errorMessages = {\n  keyword: 'keyword can contains 10 chars maximun',\n  title: 'title is required',\n  userPriority: 'userPriority is required',\n  toDoDate: 'toDoDate is required',\n  limitDate: 'limitDate is required'\n}\n\nconst CreateTask = () => {\n  const auth = useContext(AuthContext)\n\n  const {\n    value: keyword,\n    touch: keywordTouch,\n    error: keywordError,\n    handleInput: keywordHandleInput\n  } = useInput('', validators.keyword, errorMessages.keyword)\n\n  const {\n    value: title,\n    touch: titleTouch,\n    error: titleError,\n    handleInput: titleHandleInput\n  } = useInput('', validators.title, errorMessages.title)\n\n  const {\n    value: description,\n    handleInput: descriptionHandleInput\n  } = useInput('')\n\n  const {\n    value: userPriority,\n    touch: userPriorityTouch,\n    error: userPriorityError,\n    handleInput: userPriorityHandleInput\n  } = useInput('', validators.userPriority, errorMessages.userPriority)\n\n  const {\n    value: toDoDate,\n    touch: toDoDateTouch,\n    error: toDoDateError,\n    handleInput: toDoDateHandleInput\n  } = useInput('', validators.toDoDate, errorMessages.toDoDate)\n\n  const {\n    value: limitDate,\n    touch: limitDateTouch,\n    error: limitDateError,\n    handleInput: limitDateHandleInput\n  } = useInput('', validators.limitDate, errorMessages.limitDate)\n\n  const anyError = () => {\n    const errors = [keywordError.active, titleError.active, userPriorityError.active, toDoDateError.active, limitDateError.active]\n    return errors.some(x => x === true)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const date = {toDo: toDoDate, limit: limitDate}\n    const taskData = { keyword, title, description, userPriority, date}\n\n    TaskbleService.createTask(taskData)\n      /*.then(() => {\n\n      })\n      .catch(error => {\n\n      })*/\n  }\n\n  return(\n    <div /*id=\"createTask\"*/>\n\n      <h3>New Task</h3>\n\n      <form onSubmit={handleSubmit} /*id=\"form-container\"*/>\n\n        <Input type='text' name='keyword' {...keywordHandleInput} />\n        {keywordTouch && keywordError.active && (\n          <div>\n            { keywordError.message }\n          </div>\n        )}\n\n        <Input type='text' name='title' {...titleHandleInput} />\n        {titleTouch && titleError.active && (\n          <div>\n            { titleError.message }\n          </div>\n        )}\n\n        <Input type='text' name='description' {...descriptionHandleInput} />\n\n        <Input type='range' min='1' max='5' name='userPriority' placeholder='priority' {...userPriorityHandleInput} />\n        {userPriorityTouch && userPriorityError.active && (\n          <div>\n            { userPriorityError.message }\n          </div>\n        )}\n\n        <Input type='date' name='toDoDate' placeholder='to do' {...toDoDateHandleInput} />\n        {toDoDateTouch && toDoDateError.active && (\n          <div>\n            { toDoDateError.message }\n          </div>\n        )}\n\n        <Input type='date' name='limitDate' placeholder='limit' {...limitDateHandleInput} />\n        {limitDateTouch && limitDateError.active && (\n          <div>\n            { limitDateError.message }\n          </div>\n        )}\n\n        <button disabled={anyError()} type=\"submit\" /*id=\"form-submitButton\"*/>\n          Create Task\n        </button>\n\n      </form>\n\n    </div>\n  )\n}\n\nexport default CreateTask","/mnt/d/WEB DEVELOPMENT/TASKBLE/taskble-web/src/components/auth/NotAuthenticatedRoute.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":27,"column":9,"nodeType":"81","messageId":"82","endLine":27,"endColumn":13},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]